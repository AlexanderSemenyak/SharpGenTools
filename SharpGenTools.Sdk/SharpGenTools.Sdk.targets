<Project>
  <PropertyGroup>
    <SharpGenGeneratedCodeFolder Condition="'$(SharpGenGeneratedCodeFolder)' == ''">$(IntermediateOutputPath)SharpGen</SharpGenGeneratedCodeFolder>
    <SharpGenConsumerBindMappingConfigId Condition="'$(SharpGenConsumerBindMappingConfigId)' == ''">$(AssemblyName)</SharpGenConsumerBindMappingConfigId>
    <SharpGenOutputDirectory Condition="'$(SharpGenOutputDirectory)' == ''">$(MSBuildProjectDirectory)</SharpGenOutputDirectory>
    <SharpGenSdkAssembly Condition="'$(MSBuildRuntimeType)' == 'Full'">$(MSBuildThisFileDirectory)/../tools/net46/SharpGenTools.Sdk.dll</SharpGenSdkAssembly>
    <SharpGenSdkAssembly Condition="'$(MSBuildRuntimeType)' == 'Core'">$(MSBuildThisFileDirectory)/../tools/netstandard1.5/SharpGenTools.Sdk.dll</SharpGenSdkAssembly>
    <GenerateConsumerBindMappingFilePlaceholderProperty>CustomBeforeMicrosoftCommonTargets=$(MSBuildThisFileDirectory)/GenerateConsumerBindMappingFile.targets</GenerateConsumerBindMappingFilePlaceholderProperty>
  </PropertyGroup>

  <UsingTask AssemblyFile="$(SharpGenSdkAssembly)" TaskName="SharpPatch" />
  <UsingTask AssemblyFile="$(SharpGenSdkAssembly)" TaskName="SharpGen" />

  <Target Name="GetMappingsFromProjectReferences">
    <MSBuild
      Projects="@(_MSBuildProjectReferenceExistent)"
      Targets="GenerateConsumerBindMappingFile"
      BuildInParallel="$(BuildInParallel)"
      Properties="%(_MSBuildProjectReferenceExistent.SetConfiguration); %(_MSBuildProjectReferenceExistent.SetPlatform); %(_MSBuildProjectReferenceExistent.SetTargetFramework); $(GenerateConsumerBindMappingFilePlaceholderProperty)"
      ContinueOnError="$(ContinueOnError)"
      RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)">
      <Output TaskParameter="TargetOutputs" ItemName="SharpGenMapping" />
    </MSBuild>
  </Target>

  <PropertyGroup>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);GenerateConsumerBindMappingFile;GenerateTfmSpecificConsumerProps</TargetsForTfmSpecificContentInPackage>
  </PropertyGroup>

  <ItemGroup>
      <TfmConsumerProps Include="$(MSBuildProjectDirectory)/$(IntermediateOutputPath)SharpGen/$(PackageId).props">
        <PackagePath>build/$(TargetFramework);buildMultiTargeting/$(TargetFramework)</PackagePath>
        <Pack>true</Pack>
      </TfmConsumerProps>
      <SharpGenConsumerBindMappingFile Include="$(MSBuildProjectDirectory)/$(IntermediateOutputPath)SharpGen/$(SharpGenConsumerBindMappingConfigId).BindMapping.xml">
        <PackagePath>build/$(TargetFramework);buildMultiTargeting/$(TargetFramework)</PackagePath>
        <Pack>true</Pack>
      </SharpGenConsumerBindMappingFile>
      <TfmSpecificPackageFile Include="@(TfmConsumerProps);@(SharpGenConsumerBindMappingFile)" />
  </ItemGroup>

  <Target
    Name="GenerateTfmSpecificConsumerProps"
    DependsOnTargets="GenerateConsumerBindMappingFile"
    Outputs="@(TfmConsumerProps)"
  >
    <PropertyGroup>
      <EmbeddedConsumerProp>$</EmbeddedConsumerProp>
    </PropertyGroup>
    <ItemGroup>
      <TfmConsumerPropsLines Include="&lt;Project&gt;" />
      <TfmConsumerPropsLines Include="&lt;ItemGroup&gt;" />
      <TfmConsumerPropsLines Include='&lt;SharpGenMapping Include=&quot;$(EmbeddedConsumerProp)(MSBuildThisFileDirectory)/$(SharpGenConsumerBindMappingConfigId).BindMapping.xml&quot;/&gt;' />
      <TfmConsumerPropsLines Include="&lt;/ItemGroup&gt;" />
      <TfmConsumerPropsLines Include="&lt;/Project&gt;" />
    </ItemGroup>

    <WriteLinesToFile
      File="@(TfmConsumerProps)"
      Lines="@(TfmConsumerPropsLines)"
      Overwrite="true"
     />
  </Target>
  
  <Target
    Name="CorePrepareSharpGen"
    Condition="'@(SharpGenMapping)' != ''">
    <ItemGroup>
      <SharpGenGeneratedSource Condition="'$(SharpGenIncludeAssemblyNameFolder)' != 'true'" Include="$(SharpGenOutputDirectory)/$(SharpGenGeneratedCodeFolder)/**/*.cs" />
      <SharpGenGeneratedSource Condition="'$(SharpGenIncludeAssemblyNameFolder)' == 'true'" Include="$(SharpGenOutputDirectory)/*/$(SharpGenGeneratedCodeFolder)/**/*.cs" />
      <Compile Remove="$(SharpGenGeneratedSource)" />
    </ItemGroup>
  </Target>

  <Target
    Name="GenerateSharpGenBindings"
    BeforeTargets="CoreCompile"
    DependsOnTargets="PrepareForBuild;
                      GetMappingsFromProjectReferences;
                      CorePrepareSharpGen;
                      CoreGenerateSharpGenBindings;
                      GenerateConsumerBindMappingFile"
    />

  <Target
    Name="CoreGenerateSharpGenBindings" 
    BeforeTargets="CoreCompile"
    DependsOnTargets="PrepareForBuild;CorePrepareSharpGen"
    Condition="'@(SharpGenMapping)' != ''"
    Inputs="@(SharpGenMapping);$(SharpGenSdkAssembly)"
    Outputs="@(SharpGenConsumerBindMappingFile);@(SharpGenGeneratedSource)">

    <MakeDir Directories="$(IntermediateOutputPath)SharpGen" />
    <SharpGen
      CastXmlPath="$(CastXmlPath)"
      GenerateDocs="$(SharpGenGenerateDoc)"
      GlobalNamespace="$(SharpGenGlobalNamespace)"
      MappingFiles="@(SharpGenMapping)"
      IntermediateOutputPath="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)SharpGen"
      GeneratedCodeFolder="$(SharpGenGeneratedCodeFolder)"
      IncludeAssemblyNameFolder="$(SharpGenIncludeAssemblyNameFolder)"
      OutputDirectory="$(SharpGenOutputDirectory)"
      ConsumerBindMappingConfigId ="$(SharpGenConsumerBindMappingConfigId)"
      Macros="$(SharpGenMacros)"
    />

    <ItemGroup>
      <Compile Include="$(IntermediateOutputPath)SharpGen/**/*.cs" />
    </ItemGroup>
  </Target>

  <Target
    Name="GenerateConsumerBindMappingFile"
    DependsOnTargets="CoreGenerateSharpGenBindings"
    Outputs="@(SharpGenConsumerBindMappingFile)"
  />
  
  <Target Name="CleanSharpGenBindings" BeforeTargets="Clean">
    <RemoveDir Directories="$(BaseIntermediateOutputPath)/**/SharpGen" />
  </Target>
  
  <Target
    Name="RunSharpPatch"
    DependsOnTargets="CoreCompile"
    BeforeTargets="CopyFilesToOutputDirectory"
    Inputs="@(IntermediateAssembly)"
    Outputs="@(IntermediateAssembly->'%(FullPath).check')"
  >
    <SharpPatch
      AssemblyToPatch="%(IntermediateAssembly.FullPath)"
      References="@(ReferencePath)"
      GlobalNamespace="$(SharpGenGlobalNamespace)"
    />
  </Target>

  <Import Project="$(MSBuildThisFileDirectory)/GetSnPath.$(MSBuildRuntimeType).props" />

  <PropertyGroup>
    <SnParam Condition="'$(OS)' == 'Windows_NT'">-Ra</SnParam>
    <SnParam Condition="'$(OS)' == 'Unix'">-R</SnParam>
  </PropertyGroup>

  <Target
    Name="ResignAssembly"
    DependsOnTargets="GetSnPath"
    Condition="'$(SignAssembly)' =='true'">
    <Error Text="Could not find 'sn' executable. Cannot resign the patched assembly" Condition="'$(SnPath)' == '' OR !Exists('$(SnPath)')" />
    <Exec Command='"$(SnPath)" $(SnParam) %(IntermediateAssembly.FullPath) $(AssemblyOriginatorKeyFile)' WorkingDirectory="$(MSBuildProjectDirectory)" />
  </Target>

  <Target
    Name="PatchAssembly"
    DependsOnTargets="RunSharpPatch;ResignAssembly"
    BeforeTargets="CopyFilesToOutputDirectory"
    Inputs="@(IntermediateAssembly)"
    Outputs="@(IntermediateAssembly->'%(FullPath).check')"
  />
</Project>
