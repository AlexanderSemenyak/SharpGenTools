trigger:
- master
pr:
- master

jobs:
  - job: SharpGenTools_Windows
    pool:
      vmImage: 'windows-2019'
    strategy:
      matrix:
        Debug:
          Config: 'Debug'
        Release:
          Config: 'Release'
    variables:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"
    steps:
      - task: UseDotNet@2
        displayName: 'Install .NET Core Sdk'
        inputs:
          packageType: sdk
          version: 2.2.x
      - script: |
          dotnet tool install --global coverlet.console
          dotnet tool install --global CodeCov.Tool
        displayName: 'Install Code Coverage Tools'
      - pwsh: ./build.ps1 -Configuration $(Config)
        displayName: 'Build SharpGenTools'
      - pwsh: ./test.ps1 -Configuration $(Config)
        displayName: 'Run Tests'
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'VSTest'
          testResultsFiles: 'SharpGen*.trx'
          mergeTestResults: true
          testRunTitle: 'Unit Tests'
          buildConfiguration: '$(Config)'
          searchFolder: '$(Build.SourcesDirectory)/artifacts/test-results'
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'VSTest'
          testResultsFiles: '!SharpGen*.trx'
          mergeTestResults: true
          testRunTitle: 'Outerloop Tests'
          buildConfiguration: '$(Config)'
          searchFolder: '$(Build.SourcesDirectory)/artifacts/test-results'
      - ${{ if eq(variables['Config'], 'Release') }}:
        - task: CopyFiles@2
          displayName: 'Copy NuGet packages to Artifact staging directory'
          inputs:
            contents: 'Sharp*/**/Sharp*.nupkg'
            targetFolder: '$(Build.ArtifactStagingDirectory)'
            flattenFolders: true
        - task: PublishBuildArtifacts@1
          displayName: Publish NuGet Packages
          inputs:
            pathToPublish: '$(Build.ArtifactStagingDirectory)'
            artifactName: NuGet Packages
