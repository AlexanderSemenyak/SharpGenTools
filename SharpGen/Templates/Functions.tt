<#@ include file="Header.tt" #>

#if <#= Generator.AppType #>
namespace <#= Namespace.Name #> {

#pragma warning disable 419
#pragma warning disable 1587
#pragma warning disable 1574


<#
foreach (var sharpFunctionGroup in Namespace.Classes)
{
		foreach (var docItem in Generator.GetDocItems(sharpFunctionGroup)) {
#>
        /// <#= docItem #>	
<#		}#>
    <#= sharpFunctionGroup.VisibilityName #> partial class <#= sharpFunctionGroup.Name #> {   
<#

	// --------------------------------------------------------------------------------------------------
	// Handle Inner Constants
	// --------------------------------------------------------------------------------------------------
	foreach (var sharpConstant in sharpFunctionGroup.Variables) {		
#>        
        /// <summary>Constant <#= sharpConstant.Name #>.</summary>
        /// <unmanaged><#= sharpConstant.CppElementName #></unmanaged>
        <#= sharpConstant.VisibilityName #><#= sharpConstant.TypeName #> <#= sharpConstant.Name #> = <#= sharpConstant.Value #>;
<#
	}
			
	foreach (var sharpFunction in sharpFunctionGroup.Functions) {	
		ProcessMethod(sharpFunction);
		var interopFunction = sharpFunction.Interop;
#>
        [DllImport(<#= sharpFunction.DllName #>, EntryPoint = "<#= sharpFunction.CppElementName #>", CallingConvention = CallingConvention.<#= sharpFunction.CallingConvention #>)]
        private unsafe static extern <#= interopFunction.ReturnType.TypeName #> <#= sharpFunction.CppElementName #>_(<#
		for(int i = 0; i < interopFunction.ParameterTypes.Count; i++) {
			if (i > 0) {#>,<#}
#><#= interopFunction.ParameterTypes[i].TypeName #> arg<#= i #><#
		}
#>);
<#
	}
#>
    }
<#
} // Foreach Namespace.FunctionGroups
#>
}

#endif

<#@ include file="Method.tt" #>
